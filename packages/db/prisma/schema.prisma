// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User{
  id Int @id @default(autoincrement())
  email String? @unique
  name String?
  number String @unique
  password String
  Balance Balance[]
  OnRampTransaction OnRampTransaction[]
  sentTransfer p2pTransfer[] @relation(name: "fromUserRelation")
 receivedTransfer p2pTransfer[] @relation(name: "toUserRelation")
}

//Balance

model Balance{
  id Int @id @default(autoincrement())
  userId Int @unique
  amount Int
  locked Int
  user  User @relation(fields: [userId], references: [id])
}

//On ramp transaction
model OnRampTransaction{
id Int @id @default(autoincrement())
status OnRampStatus
token String @unique
provider String
startTime DateTime
amount Int
userId Int
user User @relation(fields: [userId], references: [id])


}

model p2pTransfer{
  id Int @id @default(autoincrement())
  amount Int
  timeStamp DateTime
  fromUserId Int
  toUserId Int
  fromUser User @relation(name: "fromUserRelation", fields: [fromUserId], references: [id])
  toUser User @relation(name: "toUserRelation", fields: [toUserId], references: [id])
}

enum OnRampStatus {
  Success
  Failure
  Processing
}